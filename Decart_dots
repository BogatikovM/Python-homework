def make_decart_point(x:float, y:float):
    return {'x': float(x), 'y': float(y)}

def make_segment(beginning_point, end_point):
    return {'beginning_point': beginning_point, 'end_point': end_point}

def get_mid_point_of_segment(segment):
    mid_x = (segment['beginning_point']['x'] + segment['end_point']['x']) / 2
    mid_y = (segment['beginning_point']['y'] + segment['end_point']['y']) / 2
    return 'mid point is {}, {}'.format(mid_x, mid_y)

def get_x(point):
    return point['x']

def get_y(point):
    return point['y']

def make_rectangle(p, w, h):
    return {'start point': p, 'width': w, 'hight': h}

def get_start_point(rectangle):
    return rectangle['start point']

def get_width(rectangle):
    return rectangle['width']

def get_hight(rectangle):
    return rectangle['hight']

def contains_point(point, rectangle):
    start_point = get_start_point(rectangle)
    width = get_width(rectangle)
    hight = get_hight(rectangle)
    if get_x(start_point) < get_x(point) < get_x(start_point) + width and get_y(start_point) < get_y(point) < get_y(start_point) + hight:
        answer = True
    else:
        answer = False
    return answer

if __name__ == '__main__':
    start_x = float(input('Start x: '))
    start_y = float(input('Start y: '))
    width = float(input('width: '))
    hight = float(input('hight: '))
    point_x = float(input('Point x: '))
    point_y = float(input('Point y: '))
    rectangle = make_rectangle(make_decart_point(start_x, start_y), width, hight)
    point = make_decart_point(point_x, point_y)
    print(contains_point(point, rectangle))
